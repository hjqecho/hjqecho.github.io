<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Windows下hexo和github pages搭建静态博客</title>
      <link href="/2022/05/01/Windows%E4%B8%8Bhexo%E5%92%8Cgithub%20pages%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/05/01/Windows%E4%B8%8Bhexo%E5%92%8Cgithub%20pages%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="本地安装hexo并部署到github"><a href="#本地安装hexo并部署到github" class="headerlink" title="本地安装hexo并部署到github"></a>本地安装hexo并部署到github</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="注册github"><a href="#注册github" class="headerlink" title="注册github"></a>注册github</h3><p>进入<a href="https://github.com/">GitHub</a>注册即可，教程可以自己搜索<br>在部署到github时需要使用到</p><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><p>官网<a href="https://git-scm.com/downloads">Git</a>下载或<a href="https://github.com/git-for-windows/git/releases">git-for-windows&#x2F;git (github.com)</a>下载，教程可以自己搜索</p><p>在安装完后，在桌面鼠标右键会出现<code>Git Bash Here</code>代表安装成功</p><img src="https://npm.elemecdn.com/hjqecho_img/202205011737954.png" style="zoom: 50%;" /><p>这个就是git的命令行，在命令行中输入如下命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;Your Name&quot;</span><br><span class="line">git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure><p><code>&quot;Your Name&quot;</code>设置为github的用户名，<code>&quot;email@example.com&quot;</code>设置为github登录的邮箱，设置完后可以使用下面命令查看自己的配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global --list</span><br></pre></td></tr></table></figure><p>也可以打开<code>C:\Users\用户名\.gitconfig</code>文件查看</p><h3 id="安装Nodejs"><a href="#安装Nodejs" class="headerlink" title="安装Nodejs"></a>安装Nodejs</h3><p>安装<a href="https://nodejs.org/zh-cn/download/">Node.js</a>，选择<code>.msi</code>的那个，教程可以自己搜索</p><p>安装完后执行下面命令运行查看版本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p>如果出现了版本则安装成功，在安装node的时候也会安装npm，npm是一个包管理工具，执行下面命令运行查看版本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>安装Nodejs到这里就可以使用了，下面的配置是修改全局包配置，可以不做。</p><hr><hr><p>下载包时会默认保存在C盘，通过下面命令查看当前路径</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm root -g</span><br></pre></td></tr></table></figure><p>在安装目录或C盘以外的地方创建两个文件夹，<code>node_global</code>存放全局包，<code>node_cache</code>存放node缓存</p><p>现在通过下面命令更换路径</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config set prefix &quot;D:\Promgrams\nodejs\node_global&quot;</span><br><span class="line">npm config set cache &quot;D:\Promgrams\nodejs\node_cache&quot;</span><br></pre></td></tr></table></figure><p>引号是电脑两个文件的路径，可通过<code>npm config list</code>命令或打开<code>C:\Users\用户名\.npmrc</code>文件查看。</p><p>因为修改了默认路径，所以需要修改环境变量，修改位置如下</p><img src="https://npm.elemecdn.com/hjqecho_img/202205011843693.png" style="zoom:50%;" /><h2 id="创建github仓库"><a href="#创建github仓库" class="headerlink" title="创建github仓库"></a>创建github仓库</h2><p>登录github后，点击<code>new</code>即可创建仓库</p><img src="https://npm.elemecdn.com/hjqecho_img/202205011905679.png" style="zoom:50%;" /><p>填写仓库名，仓库名的格式必须是<code>用户名.github.io</code>，然后点击创建即可</p><img src="https://npm.elemecdn.com/hjqecho_img/202205011908879.png" style="zoom:50%;" /><p>这样github的仓库就创建成功了</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p><a href="https://hexo.io/zh-cn/">Hexo</a>官网首页提供了安装步骤，在电脑在寻找一个放置blog的位置，右键<code>git bush here</code>打开git命令行。</p><p>npm可能下载太慢，通过下面命令更换为淘宝源</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>再通过<code>npm config list</code>查看</p><p>接下来运行Hexo首页提供的命令，完成安装。在运行命令可能不成功，可以尝试以管理员的方式运行，然后运行<code>cd “目录”</code>，目录是要创建blog的位置，再运行下面的命令。</p><img src="https://npm.elemecdn.com/hjqecho_img/202205011950234.png" style="zoom:50%;" /><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>运行完后可以看到<code>INFO  Hexo is running at http://localhost:4000/ . </code>，浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a> ，即可看到默认的主页</p><img src="https://npm.elemecdn.com/hjqecho_img/202205011954670.png" style="zoom:50%;" /><p>这时打<code>blog</code>开文件夹会看到生成的一些目录</p><p><img src="https://npm.elemecdn.com/hjqecho_img/202205012004767.png"></p><p>红色的字是每个文件主要的功能，详情参考<a href="https://hexo.io/zh-cn/docs/setup">建站 | Hexo</a></p><h2 id="部署到github"><a href="#部署到github" class="headerlink" title="部署到github"></a>部署到github</h2><h3 id="关联本地和github"><a href="#关联本地和github" class="headerlink" title="关联本地和github"></a>关联本地和github</h3><p>打开blog文件中的配置文件，即<code>_config.yml</code>，拉到最后可以看到如下内容</p><p><img src="https://npm.elemecdn.com/hjqecho_img/202205012217374.png"></p><p>将配置修改为如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/用户名/用户名.github.io</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>其中需要修改<code>repo</code>的内容，将用户名改为github的名字，配置文件使用的是<code>.yml</code>文件要注意在冒号之后有一个空格。更多配置查看<a href="https://hexo.io/zh-cn/docs/configuration">配置 | Hexo</a></p><p>安装<code>hexo-deployer-git</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>通过<code>deploy</code>可以通过hexo直接提交到github。</p><p>和github进行关联，有两种方法可以进行关联，任选其中一个即可</p><p><strong>方法一：</strong>通过ssh密钥</p><p>输入下面命令后回车三次即可，不用设置密码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;github注册邮箱&quot;</span><br></pre></td></tr></table></figure><p>成功后可以在<code>C:\Users\用户名\.ssh</code>文件中可以看到两个文件</p><img src="https://npm.elemecdn.com/hjqecho_img/202205012205769.png" style="zoom:50%;" /><p>其中<code>id_rsa</code>是私有的，<code>id_rsa.pub</code>是对外开放的，复制<code>id_rsa.pub</code>的内容</p><p>打开<a href="https://github.com/settings/keys">github SSH</a>，点击<code>New SSH key</code>创建一个新的SSH key。<code>Title</code>随意命名，<code>Key</code>填入复制的内容然后点击<code>Add SHH key</code>即可</p><img src="https://npm.elemecdn.com/hjqecho_img/202205012211680.png" style="zoom:50%;" /><p>测试SSH是否绑定成功，输入下面命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>成功会显示下面这句话</p><p><img src="https://npm.elemecdn.com/hjqecho_img/202205041440117.png"></p><p><strong>方法二：</strong>通过tokens</p><p>点击<a href="https://github.com/settings/tokens">Personal access tokens</a>或如图所示点击添加token</p><img src="https://npm.elemecdn.com/hjqecho_img/202205012310223.png" style="zoom:50%;" /><p><code>Note</code>可以任意命名，<code>Expiration</code>设置为不过期或者设置为其他时间，到期更换即可，然后勾选<code>repo</code>，其他的可以不设置。点击<code>Generaten token</code>生成token。</p><img src="https://npm.elemecdn.com/hjqecho_img/202205012321371.png" style="zoom:50%;" /><p>点击复制，这个token以后就不会再显示，忘记了只能重新生成</p><img src="https://npm.elemecdn.com/hjqecho_img/202205012318390.png" style="zoom:50%;" /><p>然后打开blog下的配置文件<code>_config.yml</code></p><p>将配置修改为如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/用户名/用户名.github.io</span><br><span class="line">  branch: main</span><br><span class="line">  token: ghp_3KakcaPHerunNRyMerofcFd9pblU282FSbsY</span><br></pre></td></tr></table></figure><p>其中token填生成的token</p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>然后在git命令行中输入如下命令(此时在blog目录)，因为网络原因，可能会出现失败，多尝试几次</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git d或者git deploy</span><br></pre></td></tr></table></figure><p>在运行时可能会要求输入github密码，上传完毕后就可以在github的<code>用户名.github.io</code>仓库看到已经上传的文件，等待github红色方框的地方变为绿色的小√<img src="https://npm.elemecdn.com/hjqecho_img/202205012249098.png" style="zoom:50%;" /></p><p>现在就可访问<code>https://用户名.github.io/</code>查看到网页了</p><img src="https://npm.elemecdn.com/hjqecho_img/202205012327880.png" style="zoom:50%;" /><h2 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h2><ol><li><p>通过下面命令新建一篇文章</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new 名称</span><br></pre></td></tr></table></figure><p> 新建的文章在<code>blog\source\_posts</code>中，可以使用Markdown文本编辑器进行编写，可以使用<a href="https://typoraio.cn/">Typora</a>或者其他软件</p> <img src="https://npm.elemecdn.com/hjqecho_img/202205012334461.png" style="zoom:50%;" /></li><li><p>生成静态文件使用以下命令，生成的静态文件会放在根目录下的<code>public</code>文件中</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo generate或hexo g</span><br></pre></td></tr></table></figure></li><li><p>启动服务器可以使用以下命令，这时可以通过 <a href="http://localhost:4000/">http://localhost:4000</a> 进行访问生成的网页</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo server或hexo s</span><br></pre></td></tr></table></figure></li><li><p>部署网站，部署的网站可以通过<code>https://用户名.github.io/</code>访问</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo deploy或hexo d</span><br></pre></td></tr></table></figure></li><li><p>清除缓存文件和已生成的静态文件使用以下命令</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure></li></ol><p>一般情况下会将命令配合如下使用，第一个是在本地生成静态文件运行，第二个是部署到github，更多详情查看<a href="https://hexo.io/zh-cn/docs/commands">指令 | Hexo</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><h1 id="Hexo主题及美化"><a href="#Hexo主题及美化" class="headerlink" title="Hexo主题及美化"></a>Hexo主题及美化</h1><h2 id="选择主题"><a href="#选择主题" class="headerlink" title="选择主题"></a>选择主题</h2><ul><li>通过<a href="https://hexo.io/themes/">Hexo提供的主题</a>寻找主题，一般有主题预览，可以查看制作好的网页的样式</li></ul><img src="https://npm.elemecdn.com/hjqecho_img/202205021522413.png" style="zoom:50%;" /><ul><li>在github寻找主题</li></ul><p>搜索输入<code>hexo-theme</code>，点击All GitHub搜索</p><p><img src="https://npm.elemecdn.com/hjqecho_img/202205021527068.png"></p><p>可通过排序选择合适的主题</p><p><img src="https://npm.elemecdn.com/hjqecho_img/202205021532194.png"></p><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><ul><li><p>下载主题</p><p>  打开github主页会提供下载方式，一般可以通过npm或git下载</p><p>  例如<code>git</code>方式安装<a href="https://github.com/jerryc127/hexo-theme-butterfly">butterfly</a>主题</p>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>  <code>npm</code>方式安装</p>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i hexo-theme-butterfly</span><br></pre></td></tr></table></figure></li><li><p>主题配置</p><p>  在github页面也会有提供配置方式</p><p>  一般有以下这个步骤，修改Hexo根目录中<code>_config.yml</code>文件的主题，找到<code>theme</code>，设置主题，例如<a href="https://github.com/Fechin/hexo-theme-diaspora">diaspora</a>中修改为</p>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">theme: diaspora</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>  然后根据其他要求完成配置</p></li></ul><h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><p>在<code>theme\主题名\_config.yml</code>文件中有配置信息，可以根据自己的需要更改其中的内容，例如在<a href="https://github.com/Fechin/hexo-theme-diaspora">diaspora</a>中可以修改音乐，封面，文章封面等内容，根据需要修改即可</p><img src="https://npm.elemecdn.com/hjqecho_img/202205021610954.png" style="zoom:50%;" /><h2 id="主题美化"><a href="#主题美化" class="headerlink" title="主题美化"></a>主题美化</h2><h3 id="添加鼠标点击特效"><a href="#添加鼠标点击特效" class="headerlink" title="添加鼠标点击特效"></a>添加鼠标点击特效</h3><p>在<code>theme\主题名\source\js</code>下新建<code>clicklove.js</code>文件，然后向文件添加以下内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*网页鼠标点击特效（爱心）*/</span><br><span class="line">!function (e, t, a) &#123;function r() &#123;for (var e = 0; e &lt; s.length; e++) s[e].alpha &lt;= 0 ? (t.body.removeChild(s[e].el), s.splice(e, 1)) : (s[e].y--, s[e].scale += .004, s[e].alpha -= .013, s[e].el.style.cssText = &quot;left:&quot; + s[e].x + &quot;px;top:&quot; + s[e].y + &quot;px;opacity:&quot; + s[e].alpha + &quot;;transform:scale(&quot; + s[e].scale + &quot;,&quot; + s[e].scale + &quot;) rotate(45deg);background:&quot; + s[e].color + &quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function n() &#123;var t = &quot;function&quot; == typeof e.onclick &amp;&amp; e.onclick;e.onclick = function (e) &#123;t &amp;&amp; t(), o(e)&#125;&#125;function o(e) &#123;var a = t.createElement(&quot;div&quot;);a.className = &quot;heart&quot;, s.push(&#123;el: a,x: e.clientX - 5,y: e.clientY - 5,scale: 1,alpha: 1,color: c()&#125;), t.body.appendChild(a)&#125;function i(e) &#123;var a = t.createElement(&quot;style&quot;);a.type = &quot;text/css&quot;;try &#123;a.appendChild(t.createTextNode(e))&#125; catch (t) &#123;a.styleSheet.cssText = e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function c() &#123;return &quot;rgb(&quot; + ~~(255 * Math.random()) + &quot;,&quot; + ~~(255 * Math.random()) + &quot;,&quot; + ~~(255 * Math.random()) + &quot;)&quot;&#125;var s = [];e.requestAnimationFrame = e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || function (e) &#123;setTimeout(e, 1e3 / 60)&#125;, i(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;), n(), r()&#125;(window, document);</span><br></pre></td></tr></table></figure><p>然后在<code>theme\主题名\layout</code>中找到含有<code>layout</code>的文件，在文件末尾中添加以下内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--点击效果--&gt;</span><br><span class="line">&lt;% if (theme.clicklove == true )&#123; %&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/clicklove.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;%&#125;%&gt;</span><br></pre></td></tr></table></figure><p>在主题目录的<code>_config.yml</code>文件中添加以下代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 点击出现爱心</span><br><span class="line">clicklove: true</span><br></pre></td></tr></table></figure><p>完成后重新生成静态文件<code>hexo clean &amp;&amp; hexo s</code>即可看到效果</p><img src="https://npm.elemecdn.com/hjqecho_img/202205042130824.png" style="zoom: 33%;" /><h3 id="添加Live2D看板娘"><a href="#添加Live2D看板娘" class="headerlink" title="添加Live2D看板娘"></a>添加Live2D看板娘</h3><h4 id="正常版"><a href="#正常版" class="headerlink" title="正常版"></a>正常版</h4><ul><li>在文件根目录右键<code>Git Bash Here</code>，安装<a href="https://github.com/EYHN/hexo-helper-live2d">hexo-helper-live2d</a></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d #安装live2d插件</span><br></pre></td></tr></table></figure><p>安装完后还需要下载模型，模型选择<a href="https://github.com/xiazeyu/live2d-widget-models">live2d-widget-models</a>及模型预览<a href="https://huaji8.top/post/live2d-plugin-2.0/">hexo live2d插件</a>，选择好模型输入以下命令，其中<code> &#123;packagename&#125;</code>是模型名字，在模型选择中可以看到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install &#123;packagename&#125;</span><br></pre></td></tr></table></figure><ul><li>在根目录<code>_config.yml</code>文件中，添加以下代码，其中要修改的是<code>use</code>后面的内容，改为安装模型的名字</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Live2D</span><br><span class="line"># https://github.com/EYHN/hexo-helper-live2d</span><br><span class="line">live2d:</span><br><span class="line">  enable: true# 是否开live2d</span><br><span class="line">  pluginRootPath: live2dw/# 插件在网站上的根路径</span><br><span class="line">  pluginJsPath: lib/# 插件脚本路径</span><br><span class="line">  pluginModelPath: assets/# 插件模型路径</span><br><span class="line">  scriptFrom: local# 从本地获取脚本</span><br><span class="line">  tagMode: false</span><br><span class="line">  log: false</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-wanko # 安装模型的名字，这个需要修改</span><br><span class="line">  display:</span><br><span class="line">    position: right# 模型位置</span><br><span class="line">    width: 150 # 模型宽度</span><br><span class="line">    height: 300# 模型高度</span><br><span class="line">  mobile:</span><br><span class="line">    show: true# 是否在手机端显示</span><br><span class="line">  react:</span><br><span class="line">    opacity: 0.7#透明度</span><br></pre></td></tr></table></figure><p>设置好后就会在blog中出现看板娘</p><img src="https://npm.elemecdn.com/hjqecho_img/202205042156359.png" style="zoom: 50%;" /><h4 id="加强版"><a href="#加强版" class="headerlink" title="加强版"></a>加强版</h4><ul><li>如果已经安装过正常版需要先卸载</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-helper-live2d</span><br></pre></td></tr></table></figure><ul><li>下载项目<a href="https://github.com/stevenjoezhang/live2d-widget">Live2D widget for web platform</a>到本地，解压到<code>theme\主题名\source</code>中</li></ul><img src="https://npm.elemecdn.com/hjqecho_img/202205042209656.png" style="zoom:50%;" /><ul><li><p>进入<code>live2d-widget</code>将<code>autoload.js</code>文件中的live2d_path设为自己的路径，一般为绝对路径：<code>/live2d-widget/</code></p>  <img src="https://npm.elemecdn.com/hjqecho_img/202205042232607.png" style="zoom:50%;" /></li><li><p>在主题目录下的<code>layout\_partial</code>中找到<code>head.ejs</code>文件，在<code>&lt;head&gt;</code>标签中加入</p></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--自定义看板娘--&gt;</span><br><span class="line">   &lt;% if (theme.live2d == true )&#123; %&gt;</span><br><span class="line">   &lt;script src=&quot;/live2d-widget/autoload.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">   &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.staticfile.org/font-awesome/4.7.0/css/font-awesome.css&quot;/&gt;</span><br><span class="line">   &lt;%&#125;%&gt;</span><br></pre></td></tr></table></figure><ul><li>最后在主题目录的<code>_config.yml</code>文件中添加以下代码</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Live2D</span><br><span class="line"># https://github.com/stevenjoezhang/live2d-widget</span><br><span class="line">live2d: true</span><br></pre></td></tr></table></figure><p>现在执行<code>hexo clean &amp;&amp; hexo s</code>就可以在网页中看到看板娘了</p><img src="https://npm.elemecdn.com/hjqecho_img/202205042236154.png" style="zoom:50%;" /><ul><li><p>修改live2d位置，在<code>live2d-widget</code>目录下的<code>waaifu.css</code>的<code>#waifu</code>选择器修改</p>  <img src="https://npm.elemecdn.com/hjqecho_img/202205051747987.png" style="zoom:50%;" /></li><li><p><code>waifu-tips.js</code>和<code>waifu-tips.json</code>两个文件都是和live2d对话相关的文件，可以修改想要的对话以及对应的触发条件</p></li><li><p><code>waifu-tips.js</code>文件中，可以修改首次加载的模型及材质</p><p>  <img src="https://npm.elemecdn.com/hjqecho_img/202205051850503.png"></p></li><li><p>使用API参考<a href="https://github.com/fghrsh/live2d_api">Live2D 看板娘插件上使用的后端 API</a></p></li></ul><h3 id="添加返回顶部悬挂喵"><a href="#添加返回顶部悬挂喵" class="headerlink" title="添加返回顶部悬挂喵"></a>添加返回顶部悬挂喵</h3><p>下载项目<a href="https://github.com/MisakaTAT/GoTop">GoTop置顶插件</a></p><p>解压将<code>css</code>文件放入到主题文件下的<code>source\css</code>中，并重命名为<code>gotop.css</code>，<code>images</code>文件放到主题文件下的<code>source\img</code>中，<code>js</code>文件放到主题文件下的<code>source\js</code>中，并重命名为<code>gotop.js</code>。</p><p>然后打开主题文件的<code>layout</code>文件夹，在<code>layout.ejs</code>最下面添加代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- goToTop --&gt;</span><br><span class="line">&lt;% if (theme.gotop == true )&#123; %&gt;</span><br><span class="line">&lt;div class=&quot;back-to-top cd-top faa-float animated cd-is-visible&quot; style=&quot;top: -900px;&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/gotop.css&quot; /&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/gotop.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;%&#125;%&gt;</span><br></pre></td></tr></table></figure><ul><li>在主题目录的<code>_config.yml</code>文件中添加以下代码</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 返回到最上面</span><br><span class="line">gotop: true</span><br></pre></td></tr></table></figure><img src="https://npm.elemecdn.com/hjqecho_img/202205052233555.png" style="zoom:50%;" /><h3 id="鼠标指针"><a href="#鼠标指针" class="headerlink" title="鼠标指针"></a>鼠标指针</h3><p>在<a href="https://zhutix.com/tag/cursors">鼠标指针</a>选择自己想要的指针样式，下载解压，解压文件能使用的是<code>.cur</code>格式</p><img src="https://npm.elemecdn.com/hjqecho_img/202205052259724.png" style="zoom:50%;" /><p>其中图片的大小要为<code>32×32</code>左右不宜过大或过小</p><img src="https://cdn.jsdelivr.net/gh/hjqecho/blog.img/202205052320003.png" style="zoom:50%;" /><p><code>source\css\主题名.css</code>的最上面添加</p><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="addition">+ qwe</span></span><br><span class="line"><span class="deletion">- qweq</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
